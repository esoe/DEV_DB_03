@startuml
!define primary_key(x) <b><color:#b8861b><&key></color> x</b>
!define foreign_key(x) <b><color:#aaaaaa><&key></color> x</b>
!define column(x) <b><color:#efefef><&media-record></color> x</b>
!define table(x) entity x << (T, white) >>

title "Entity Relationship Diagram (ERD): Библиотека"
' left to right direction
entity "Библиотечный фонд" as repository
entity "Авторы" as authors
entity "Штрихкоды" as barcodes
entity "Библиография" as bibliography
entity "Жанры" as genres
entity "Издательства" as publishers
entity "Карточка читателя" as accounts
entity "Паспорт" as pasports
entity "Свидетельство о рождении" as certificates
entity "Выдача книг" as allocation
entity "Бронирование" as booking


' Сведения о приобретенных библиотекой книгах
' одна строчка - одно издание
' - которая может быть приобретена в нескольких экземплярах
table(repository) {
    primary_key(id): INTEGER                >>"Идентификатор"
    column(title): VARCHAR[300]             >>"Наименование"
    foreign_key(genre): INTEGER             >>"Жанр"
    column(isbn): INTEGER                   >>"isbn"
    column(binding): VARCHAR[10]            >>"Вид переплета"
    column(year): DATE                      >>"Год издания"
    foreign_key(publishers_id): INTEGER     >>"Издательство"
    column(instances): INTEGER              >>"Количество экземпляров"
}

' сведения об авторах
table(authors){
    primary_key(id): INTEGER                >>"Идентификатор"
    column(fio): VARCHAR[50]                >>"ФИО"
    column(country): VARCHAR[20]            >>"Страна рождения"
}

' Таблица экземпляров книг
' Одна строка - один физический экземпляр
table(barcodes){
    primary_key(id): INTEGER                >>"Идентификатор"
    column(code): INTEGER                   >>"Штрихкод.csv"
    foreign_key(repository_id)              >>"Публикация"
}

' сведения о соавторах
' таблица для определения:
' - перечня авторов книги
' - перечня книг в написании которых участвовал автор
table(bibliography){
    foreign_key(repository_id): INTEGER
    foreign_key(authors_id): INTEGER
}

' Жанры
table(genres){
    primary_key(id): INTEGER                >>"Идентификатор"
    column(genre)                           >>"Жанр"
}

table(publishers) {
  primary_key( id ): INTEGER                >>"Идентификатор"
  column(name): VARCHAR[50]                 >>"Наименование"
  column(address): VARCHAR[300]             >>"Адрес"
  column(phone): INTEGER                    >>"Телефон"
  column(contactname): VARCHAR[150]         >>"Контакты-имя"
}

' Карточки читателей
table(accounts) {
    primary_key( id ): INTEGER              >>"Идентификатор"
    column(fname): VARCHAR[50]              >>"Имя"
    column(sname): VARCHAR[50]              >>"Отчество"
    column(lname): VARCHAR[50]              >>"Фамилия"
    column(address): VARCHAR[300]           >>"Адрес"
    column(phone): INTEGER                  >>"Телефон"
    foreign_key(pasport): INTEGER           >>"Паспорт"
    foreign_key(sertificate): INTEGER       >>"Свидетельство о рождении"
}

' Паспорта
table(pasports){
    primary_key( id ): INTEGER              >>"Идентификатор"
    column(serial): INTEGER                 >>"Серия"
    column(number): INTEGER                 >>"Номер"
}

' Свидетельства о рождении
table(certificates){
    primary_key( id ): INTEGER              >>"Идентификатор"
    column(serial): VARCHAR[10]             >>"Серия"
    column(number): INTEGER                 >>"Номер"
}

' Выдача книг
table(allocation) {
    primary_key( id ): INTEGER              >>"Идентификатор"
    column(book_out): DATE                  >>"Дата выдачи"
    column(book_in): DATE                   >>"Планируемая дата возврата"
    column(book_in_fact): DATE              >>"Фактическая дата возврата"
    column(penalty): MONEY                  >>"Штраф"
    column(late):INTEGER                    >>"Период задержки возврата книги"
    foreign_key(repository_id): INTEGER     >>"Идентификатор издания"
    foreign_key(booking_id): INTEGER        >>"Идентификатор бронирования"
    foreign_key(repository_id): INTEGER     >>"Идентификатор издания"
}

' Бронирование книг
table(booking){
    primary_key( id ): INTEGER              >>"Идентификатор"
    foreign_key(repository_id): INTEGER     >>"Идентификатор издания"
    column(date): DATE                      >>"Дата бронирования"
}

' user }|--|| city

repository --{ publishers : "repository_id"
repository --{ barcodes : "repository_id"
repository --{ genres : "genre_id"

bibliography --{ repository
bibliography --{ authors

accounts ||--|| certificates
accounts ||--|| pasports

allocation --{ booking  : "booking_id"
allocation --{ repository : "repository_id"
allocation --{ accounts : "account_id"
@enduml